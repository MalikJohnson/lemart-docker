import{a as S,b as y,n as T,o as k}from"./chunk-ICKQEOCD.js";import{C as n,O as h,Q as g,V as I,_ as l,a as d,b as m,i as v,j as p,m as s,n as C,q as b,w as f}from"./chunk-J2LCUAOM.js";var c={id:"temp",items:[]},A=class u{constructor(t,e){this.http=t;this.auth=e;this.initCart()}apiUrl=`${T.apiUrl}/carts`;localKey="cart_v1";cart=new p([]);cart$=this.cart.asObservable();total=new p(0);total$=this.total.asObservable();changes=new v;changes$=this.changes.asObservable();initCart(){this.auth.hasValidToken()?this.syncWithServer().subscribe():this.loadLocalCart()}loadLocalCart(){let t=localStorage.getItem(this.localKey);if(t)try{let e=JSON.parse(t);this.cart.next(e),this.updateTotal()}catch{localStorage.removeItem(this.localKey)}}addItem(t,e,r=1){let a=[...this.cart.value],o=a.find(i=>i.productId===t);o?o.quantity+=r:a.push({productId:t,quantity:r,priceAtPurchase:e,addedAt:new Date}),this.updateCart(a)}updateItem(t,e){if(e<=0){this.removeItem(t);return}let r=this.cart.value.map(a=>a.productId===t?m(d({},a),{quantity:e}):a);this.updateCart(r)}removeItem(t){let e=this.cart.value.filter(r=>r.productId!==t);this.updateCart(e)}clearCart(){this.updateCart([]),localStorage.removeItem(this.localKey)}syncWithServer(){return this.auth.hasValidToken()?f({local:s(this.cart.value),server:this.getServerCart().pipe(n(()=>s(c)))}).pipe(h(({local:t,server:e})=>{let r=this.mergeCarts(t,e.items);return this.saveToServer(r)}),g(t=>{this.updateCart(t.items)}),b(()=>{}),n(t=>(console.error("Cart sync failed",t),s(void 0)))):s(void 0)}mergeCarts(t,e){return[...e,...t.filter(r=>!e.some(a=>a.productId===r.productId))]}getServerCart(){if(console.log("[DEBUG] Starting getServerCart()"),!this.auth.hasValidToken())return console.error("[DEBUG] No valid token - using empty cart"),s(c);let t=this.auth.getToken();if(!t)return console.error("[DEBUG] Token is null"),s(c);let e=new S({Authorization:`Bearer ${t}`,"Content-Type":"application/json"});return console.log("[DEBUG] Final headers:",e),console.log("[DEBUG] Raw token:",this.auth.getToken()),console.log("[DEBUG] Decoded token:",this.auth.decodeToken()),this.http.get(`${this.apiUrl}/user/${this.auth.getUserId()}`,{headers:e,withCredentials:!0}).pipe(n(r=>(console.error("[DEBUG] Full error response:",{status:r.status,message:r.message,headers:r.headers,error:r.error}),s(c))))}saveToServer(t){let e=this.auth.getUserId(),r=this.auth.getAuthHeader();return this.getServerCart().pipe(h(a=>{let o={items:t.map(i=>({productId:i.productId,quantity:i.quantity,priceAtAddition:i.priceAtPurchase}))};return a.id!=="temp"?this.http.put(`${this.apiUrl}/user/${e}`,o,{headers:r}).pipe(n(i=>(console.error("Cart update failed",i),C(()=>i)))):this.http.post(this.apiUrl,{userId:e,items:o.items},{headers:r})}))}updateCart(t){this.cart.next(t),this.updateTotal(),this.persistCart(t),this.changes.next()}updateTotal(){let t=this.cart.value.reduce((e,r)=>e+r.priceAtPurchase*r.quantity,0);this.total.next(parseFloat(t.toFixed(2)))}persistCart(t){this.auth.hasValidToken()?this.saveToServer(t).subscribe():localStorage.setItem(this.localKey,JSON.stringify(t))}getItemCount(){return this.cart.value.reduce((t,e)=>t+e.quantity,0)}getItem(t){return this.cart.value.find(e=>e.productId===t)}static \u0275fac=function(e){return new(e||u)(l(y),l(k))};static \u0275prov=I({token:u,factory:u.\u0275fac,providedIn:"root"})};export{A as a};
